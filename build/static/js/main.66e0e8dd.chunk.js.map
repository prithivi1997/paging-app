{"version":3,"sources":["App.js","reportWebVitals.js","index.js","App.module.css"],"names":["App","state","userData","total","per_page","current_page","fetchUserData","pageNumber","a","fetch","response","json","data","console","log","setState","page","this","renderPageNumbers","map","user","id","first_name","last_name","email","src","avatar","pageNumbers","i","Math","ceil","push","number","classes","styles","active","className","onClick","app","table","pagination","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAkGeA,E,4MA9FbC,MAAQ,CACNC,SAAU,KACVC,MAAO,KACPC,SAAU,KACVC,aAAc,G,EAOhBC,c,uCAAgB,WAAOC,GAAP,iBAAAC,EAAA,sEACSC,MAAM,qCAAD,OACWF,IAFzB,cACRG,EADQ,gBAKKA,EAASC,OALd,OAKRC,EALQ,OAMbC,QAAQC,IAAIF,GAGb,EAAKG,SAAS,CACZb,SAAUU,EAAKA,KACfT,MAAOS,EAAKT,MACZC,SAAUQ,EAAKR,SACfC,aAAcO,EAAKI,OAbP,2C,6GAJhB,WACEC,KAAKX,cAAc,K,oBAoBrB,WAAU,IACJJ,EAAUgB,EADP,OAGqB,OAAxBD,KAAKhB,MAAMC,WACbA,EAAWe,KAAKhB,MAAMC,SAASiB,KAAI,SAACC,GAElC,OADAP,QAAQC,IAAIM,GAEV,+BACE,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,aACV,6BAAKF,EAAKG,YACV,6BAAKH,EAAKI,QACV,6BACE,qBAAKC,IAAKL,EAAKM,aANVN,EAAKC,QAapB,IAAMM,EAAc,GACpB,GAAyB,OAArBV,KAAKhB,MAAME,MAAgB,CAC7B,IACE,IAAIyB,EAAI,EACRA,GAAKC,KAAKC,KAAKb,KAAKhB,MAAME,MAAQc,KAAKhB,MAAMG,UAC7CwB,IAEAD,EAAYI,KAAKH,GAGnBV,EAAoBS,EAAYR,KAAI,SAACa,GACnC,IAAIC,EAAU,EAAKhC,MAAMI,eAAiB2B,EAASE,IAAOC,OAAS,GAEnE,OACE,sBAEEC,UAAWH,EACXI,QAAS,kBAAM,EAAK/B,cAAc0B,IAHpC,SAKGA,GAJIA,MAUb,OACE,sBAAKI,UAAWF,IAAOI,IAAvB,UACE,wBAAOF,UAAWF,IAAOK,MAAzB,UACE,gCACE,+BACE,oCACA,4CACA,2CACA,uCACA,8CAGJ,gCAAQrC,OAGV,qBAAKkC,UAAWF,IAAOM,WAAvB,SAAoCtB,W,GAzF1BuB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,OAAS,uB","file":"static/js/main.66e0e8dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    userData: null,\n    total: null,\n    per_page: null,\n    current_page: 1,\n  };\n\n  componentDidMount() {\n    this.fetchUserData(1);\n  }\n\n  fetchUserData = async (pageNumber) => {\n    const response = await fetch(\n      ` https://reqres.in/api/users?page=${pageNumber}`\n    );\n\n    const data = await response.json();\n     console.log(data)\n    // console.log(data.data)\n\n    this.setState({\n      userData: data.data,\n      total: data.total,\n      per_page: data.per_page,\n      current_page: data.page,\n    });\n  };\n\n  render() {\n    let userData, renderPageNumbers;\n\n    if (this.state.userData !== null) {\n      userData = this.state.userData.map((user) => {\n        console.log(user);\n        return (\n          <tr key={user.id}>\n            <td>{user.id}</td>\n            <td>{user.first_name}</td>\n            <td>{user.last_name}</td>\n            <td>{user.email}</td>\n            <td>\n              <img src={user.avatar} />\n            </td>\n          </tr>\n        );\n      });\n    }\n\n    const pageNumbers = [];\n    if (this.state.total !== null) {\n      for (\n        let i = 1;\n        i <= Math.ceil(this.state.total / this.state.per_page);\n        i++\n      ) {\n        pageNumbers.push(i);\n      }\n\n      renderPageNumbers = pageNumbers.map((number) => {\n        let classes = this.state.current_page === number ? styles.active : \"\";\n\n        return (\n          <span\n            key={number}\n            className={classes}\n            onClick={() => this.fetchUserData(number)}\n          >\n            {number}\n          </span>\n        );\n      });\n    }\n\n    return (\n      <div className={styles.app}>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Email</th>\n              <th>Picture</th>\n            </tr>\n          </thead>\n          <tbody>{userData}</tbody>\n        </table>\n\n        <div className={styles.pagination}>{renderPageNumbers}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2lfCz\",\"pagination\":\"App_pagination__2s0_D\",\"active\":\"App_active__2h1qf\"};"],"sourceRoot":""}